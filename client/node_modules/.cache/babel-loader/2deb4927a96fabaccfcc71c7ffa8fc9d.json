{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist'; //import thunk from 'redux-thunk';\n\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nimport rootReducer from './root-reducer.js';\nimport rootSaga from './root-saga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n} //export not needed in below statements\n\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //Inside run() we pass indivisual saga\n\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:/React Projects/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","fetchCollectionsStart","rootReducer","rootSaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,MAAMC,cAAc,GAAGJ,oBAAoB,EAA3C;AAEA,MAAMK,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA1B,EAAwC;AACpCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH,C,CAED;;;AACA,OAAO,MAAMY,KAAK,GAAGd,WAAW,CAACM,WAAD,EAAcL,eAAe,CAAC,GAAGQ,WAAJ,CAA7B,CAAzB,C,CAEP;;AACAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAGA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { persistStore } from 'redux-persist';\r\n//import thunk from 'redux-thunk';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport { fetchCollectionsStart } from './shop/shop.sagas';\r\n\r\nimport rootReducer from './root-reducer.js';\r\nimport rootSaga from './root-saga';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif(process.env.NODE_ENV==='development'){\r\n    middlewares.push(logger);\r\n}\r\n\r\n//export not needed in below statements\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n//Inside run() we pass indivisual saga\r\nsagaMiddleware.run(rootSaga);\r\n\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nexport default { store, persistor};"]},"metadata":{},"sourceType":"module"}