{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\crwn-clothing\\\\src\\\\components\\\\cart-dropdown\\\\cart-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\nimport './cart-dropdown.styles.scss';\nimport { createStructuredSelector } from 'reselect';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  ...otherProps\n}) => {\n  console.log(otherProps);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => history.push('/checkout'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n}); //IF second prop is not passed to connect HOC, it sends dispatch function as \n//props to the component\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["D:/React Projects/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","connect","withRouter","selectCartItems","CustomButton","CartItem","createStructuredSelector","toggleCartHidden","CartDropdown","cartItems","history","otherProps","console","log","length","map","cartItem","id","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,6BAAP;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAqB,KAAGC;AAAxB,CAAD,KAA0C;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,sBACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,SAAS,CAACK,MAAV,GAEAL,SAAS,CAACM,GAAV,CAAcC,QAAQ,iBAClB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFA,gBAMA;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BARR,CADJ,eAYI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMN,OAAO,CAACQ,IAAR,CAAa,WAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ,CADA;AAeF,CAjBF;;AAmBA,MAAMC,eAAe,GAAGb,wBAAwB,CAAC;AAC7CG,EAAAA,SAAS,EAAEN;AADkC,CAAD,CAAhD,C,CAIA;AACA;;AACA,eAAeD,UAAU,CAACD,OAAO,CAACkB,eAAD,CAAP,CAAyBX,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport CartItem from '../cart-item/cart-item.component';\r\nimport './cart-dropdown.styles.scss';\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\r\n\r\nconst CartDropdown = ({ cartItems, history,...otherProps }) => {\r\n    console.log(otherProps);\r\n    return (\r\n    <div className='cart-dropdown'>\r\n        <div className='cart-items'>\r\n            {\r\n                cartItems.length \r\n                ? \r\n                cartItems.map(cartItem => (\r\n                    <CartItem key={cartItem.id} item={cartItem} />\r\n                ))\r\n                :\r\n                <span className='empty-message'>Your cart is empty</span>\r\n            }\r\n        </div>\r\n        <CustomButton onClick={() => history.push('/checkout')}>GO TO CHECKOUT</CustomButton>\r\n    </div>\r\n)}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    cartItems: selectCartItems\r\n});\r\n\r\n//IF second prop is not passed to connect HOC, it sends dispatch function as \r\n//props to the component\r\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\r\n"]},"metadata":{},"sourceType":"module"}