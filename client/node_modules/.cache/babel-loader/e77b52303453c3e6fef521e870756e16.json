{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAkzoXHP3u_HtgC7RC-Rr2_bqndB7Zec6g\",\n  authDomain: \"crwn-clothing-1d158.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-1d158.firebaseio.com\",\n  projectId: \"crwn-clothing-1d158\",\n  storageBucket: \"crwn-clothing-1d158.appspot.com\",\n  messagingSenderId: \"806220471276\",\n  appId: \"1:806220471276:web:ea36e14e613c26d8c13ec9\",\n  measurementId: \"G-2G7ZMXWHWZ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc(obj.title);\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  const transformedCollectionMap = transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n  return transformedCollectionMap;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["D:/React Projects/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","title","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","items","data","routeName","encodeURI","toLowerCase","id","transformedCollectionMap","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAkzoXHP3u_HtgC7RC-Rr2_bqndB7Zec6g\",\r\n    authDomain: \"crwn-clothing-1d158.firebaseapp.com\",\r\n    databaseURL: \"https://crwn-clothing-1d158.firebaseio.com\",\r\n    projectId: \"crwn-clothing-1d158\",\r\n    storageBucket: \"crwn-clothing-1d158.appspot.com\",\r\n    messagingSenderId: \"806220471276\",\r\n    appId: \"1:806220471276:web:ea36e14e613c26d8c13ec9\",\r\n    measurementId: \"G-2G7ZMXWHWZ\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if(!userAuth) return;\r\n    \r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n\r\n     const snapShot = await userRef.get();\r\n\r\n    if(!snapShot.exists){\r\n      const { displayName, email } = userAuth;\r\n      const createdAt = new Date();\r\n\r\n      try {\r\n        await userRef.set({\r\n          displayName,\r\n          email,\r\n          createdAt,\r\n          ...additionalData\r\n        })\r\n      } catch (error) {\r\n        console.log(\"Error creating user\" , error.message);\r\n      }\r\n    }\r\n\r\n    return userRef;\r\n\r\n  }\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    console.log(collectionRef);\r\n\r\n    const batch = firestore.batch(); \r\n    objectsToAdd.forEach(obj => {\r\n      const newDocRef = collectionRef.doc(obj.title);\r\n      batch.set(newDocRef, obj);\r\n    });\r\n\r\n    return await batch.commit();\r\n  }\r\n\r\n  export const convertCollectionsSnapshotToMap = (collections) => {\r\n    const transformedCollection = collections.docs.map(doc => {\r\n      const { title, items } = doc.data();\r\n\r\n      return {\r\n        routeName: encodeURI(title.toLowerCase()),\r\n        id: doc.id,\r\n        title,\r\n        items\r\n      }\r\n    })\r\n    \r\n    const transformedCollectionMap = transformedCollection.reduce((accumulator, collection) => {\r\n      accumulator[collection.title.toLowerCase()] = collection;\r\n      return accumulator;\r\n    },{});\r\n\r\n    return transformedCollectionMap;\r\n  }\r\n\r\n  export const getCurrentUser = () => {\r\n    return new Promise((resolve, reject) => {\r\n      const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n        unsubscribe();\r\n        resolve(userAuth);\r\n\r\n      }, reject)\r\n    })\r\n  }\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  export const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n  googleProvider.setCustomParameters({prompt: 'select_account'});\r\n  export const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}