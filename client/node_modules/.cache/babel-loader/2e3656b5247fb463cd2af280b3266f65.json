{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n  };\n};\nexport const fetchCollectionsFailure = error => {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: error.message\n  };\n};\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error)));\n  };\n};","map":{"version":3,"sources":["D:/React Projects/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","error","message","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADnB,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,IAAoB;AACvD,SAAO;AACHH,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADnB;AAEHC,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,uBAAuB,GAAIC,KAAD,IAAW;AAC9C,SAAO;AACHP,IAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADnB;AAEHC,IAAAA,OAAO,EAAEE,KAAK,CAACC;AAFZ,GAAP;AAIH,CALM;AAOP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC5C,SAAQC,QAAD,IAAc;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GACKC,IADL,CACUC,QAAQ,IAAI;AACd,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAJL,EAKKa,KALL,CAKWT,KAAK,IAAIG,QAAQ,CAACJ,uBAAuB,CAACC,KAAD,CAAxB,CAL5B;AAMH,GAXD;AAYH,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nexport const fetchCollectionsStart = () => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n    }\r\n};\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap) => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n        payload: collectionsMap\r\n    }\r\n};\r\n\r\nexport const fetchCollectionsFailure = (error) => {\r\n    return {\r\n        type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n        payload: error.message\r\n    }\r\n};\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return (dispatch) => {\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get()\r\n            .then(snapshot => {\r\n                const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n                dispatch(fetchCollectionsSuccess(collectionsMap));\r\n            })\r\n            .catch(error => dispatch(fetchCollectionsFailure(error)))\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}